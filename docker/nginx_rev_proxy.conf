# First server block now directly handles HTTP requests instead of redirecting
server {
    listen 80;
    server_name mcpgateway localhost mcpgateway.ddns.net ec2-44-192-72-20.compute-1.amazonaws.com;

    # Route for Cost Explorer service
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # REMOVE HARDCODED /mcpgw
    # location /mcpgw/ {
    #     proxy_pass http://127.0.0.1:8003/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /currenttime
    # location /currenttime/ {
    #     proxy_pass http://127.0.0.1:8001/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /fininfo
    # location /fininfo/ {
    #     proxy_pass http://127.0.0.1:8002/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     
    #     # Additional settings for SSE support
    #     proxy_set_header Connection '';
    #     chunked_transfer_encoding off;
    #     proxy_buffering off;
    #     proxy_cache off;
    #     proxy_read_timeout 3600s;
    # }

    # --- ADD DYNAMIC MARKERS --- START
    # DYNAMIC_LOCATIONS_START

    # DYNAMIC_LOCATIONS_END
    # --- ADD DYNAMIC MARKERS --- END

    location /tsbedrock/ {
        # Fix the path handling by adding trailing slash and using $request_uri
        proxy_pass https://hwfo2k8szg.execute-api.us-east-1.amazonaws.com/prod/;
        
        # AWS API Gateway often needs Host header to match the API Gateway domain
        proxy_set_header Host hwfo2k8szg.execute-api.us-east-1.amazonaws.com;
        
        # These headers help with request routing
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API Gateway often requires these settings
        proxy_ssl_server_name on;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        
        # Adjust the rewrite to handle the path correctly
        rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    }
    
    error_log /var/log/nginx/error.log debug;
}

# Keep the HTTPS server for clients that prefer it
server {
    listen 443 ssl;
    server_name mcpgateway localhost mcpgateway.ddns.net ec2-44-192-72-20.compute-1.amazonaws.com;

    # SSL Configuration using self-signed certs generated in Dockerfile
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    # Stronger cipher suite
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Duplicate the same location blocks for HTTPS access
    location / {
        proxy_pass http://127.0.0.1:7860/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # REMOVE HARDCODED /mcpgw
    # location /mcpgw/ {
    #     proxy_pass http://127.0.0.1:8003/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /currenttime
    # location /currenttime/ {
    #     proxy_pass http://127.0.0.1:8001/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }
    
    # REMOVE HARDCODED /fininfo
    # location /fininfo/ {
    #     proxy_pass http://127.0.0.1:8002/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     
    #     # Additional settings for SSE support
    #     proxy_set_header Connection '';
    #     chunked_transfer_encoding off;
    #     proxy_buffering off;
    #     proxy_cache off;
    #     proxy_read_timeout 3600s;
    # }

    # --- ADD DYNAMIC MARKERS --- START
    # DYNAMIC_LOCATIONS_START

    # DYNAMIC_LOCATIONS_END
    # --- ADD DYNAMIC MARKERS --- END

    location /tsbedrock/ {
        proxy_pass https://hwfo2k8szg.execute-api.us-east-1.amazonaws.com/prod/;
        proxy_set_header Host hwfo2k8szg.execute-api.us-east-1.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_ssl_server_name on;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        rewrite ^/tsbedrock/(.*)$ /prod/$1 break;
    }
    
    error_log /var/log/nginx/error.log debug;
}